/* Generated By:JavaCC: Do not edit this line. ATScriptParserConstants.java */
package com.gpl.rpg.AndorsTrail.scripting.interpreter;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ATScriptParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DOT = 5;
  /** RegularExpression Id. */
  int LPAR = 6;
  /** RegularExpression Id. */
  int RPAR = 7;
  /** RegularExpression Id. */
  int LBRAC = 8;
  /** RegularExpression Id. */
  int RBRAC = 9;
  /** RegularExpression Id. */
  int SCOL = 10;
  /** RegularExpression Id. */
  int COMA = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int WHILE = 14;
  /** RegularExpression Id. */
  int RETURN = 15;
  /** RegularExpression Id. */
  int TRUE = 16;
  /** RegularExpression Id. */
  int FALSE = 17;
  /** RegularExpression Id. */
  int EXCLAM = 18;
  /** RegularExpression Id. */
  int GOE = 19;
  /** RegularExpression Id. */
  int LOE = 20;
  /** RegularExpression Id. */
  int GT = 21;
  /** RegularExpression Id. */
  int LT = 22;
  /** RegularExpression Id. */
  int EQ = 23;
  /** RegularExpression Id. */
  int PLUS = 24;
  /** RegularExpression Id. */
  int MINUS = 25;
  /** RegularExpression Id. */
  int MULTIPLY = 26;
  /** RegularExpression Id. */
  int DIVIDE = 27;
  /** RegularExpression Id. */
  int CONCAT = 28;
  /** RegularExpression Id. */
  int AND = 29;
  /** RegularExpression Id. */
  int OR = 30;
  /** RegularExpression Id. */
  int EQUALS = 31;
  /** RegularExpression Id. */
  int DQUO = 32;
  /** RegularExpression Id. */
  int NUMBER = 33;
  /** RegularExpression Id. */
  int MAP = 34;
  /** RegularExpression Id. */
  int WORLD = 35;
  /** RegularExpression Id. */
  int ATTACK = 36;
  /** RegularExpression Id. */
  int PLAYER = 37;
  /** RegularExpression Id. */
  int ACTOR = 38;
  /** RegularExpression Id. */
  int ITEM = 39;
  /** RegularExpression Id. */
  int OUTDOOR = 40;
  /** RegularExpression Id. */
  int ACTIVATEGROUP = 41;
  /** RegularExpression Id. */
  int DEACTIVATEGROUP = 42;
  /** RegularExpression Id. */
  int GETMAP = 43;
  /** RegularExpression Id. */
  int CURRENT = 44;
  /** RegularExpression Id. */
  int SOURCE = 45;
  /** RegularExpression Id. */
  int TARGET = 46;
  /** RegularExpression Id. */
  int DAMAGE = 47;
  /** RegularExpression Id. */
  int CATEGORY = 48;
  /** RegularExpression Id. */
  int REWARD = 49;
  /** RegularExpression Id. */
  int ADDCONDITION = 50;
  /** RegularExpression Id. */
  int CLEARCONDITION = 51;
  /** RegularExpression Id. */
  int GETITEMCOUNT = 52;
  /** RegularExpression Id. */
  int GIVEITEM = 53;
  /** RegularExpression Id. */
  int REMOVEITEM = 54;
  /** RegularExpression Id. */
  int GETITEMINSLOT = 55;
  /** RegularExpression Id. */
  int EQUIPITEMINSLOT = 56;
  /** RegularExpression Id. */
  int UNEQUIPSLOT = 57;
  /** RegularExpression Id. */
  int HASQUESTPROGRESS = 58;
  /** RegularExpression Id. */
  int ADDQUESTPROGRESS = 59;
  /** RegularExpression Id. */
  int ACTORCONDITIONS = 60;
  /** RegularExpression Id. */
  int TOSOURCE = 61;
  /** RegularExpression Id. */
  int TOTARGET = 62;
  /** RegularExpression Id. */
  int BASE = 63;
  /** RegularExpression Id. */
  int MAXHP = 64;
  /** RegularExpression Id. */
  int MAXAP = 65;
  /** RegularExpression Id. */
  int MOVECOST = 66;
  /** RegularExpression Id. */
  int EQUIPCOST = 67;
  /** RegularExpression Id. */
  int USECOST = 68;
  /** RegularExpression Id. */
  int ADDEXPERIENCE = 69;
  /** RegularExpression Id. */
  int LEVEL = 70;
  /** RegularExpression Id. */
  int TOTALEXP = 71;
  /** RegularExpression Id. */
  int CURRENTEXP = 72;
  /** RegularExpression Id. */
  int ADDALIGNMENT = 73;
  /** RegularExpression Id. */
  int GETALIGNMENT = 74;
  /** RegularExpression Id. */
  int ID = 75;
  /** RegularExpression Id. */
  int HP = 76;
  /** RegularExpression Id. */
  int AP = 77;
  /** RegularExpression Id. */
  int AC = 78;
  /** RegularExpression Id. */
  int AD = 79;
  /** RegularExpression Id. */
  int BC = 80;
  /** RegularExpression Id. */
  int DR = 81;
  /** RegularExpression Id. */
  int CC = 82;
  /** RegularExpression Id. */
  int CM = 83;
  /** RegularExpression Id. */
  int MIN = 84;
  /** RegularExpression Id. */
  int MAX = 85;
  /** RegularExpression Id. */
  int CUR = 86;
  /** RegularExpression Id. */
  int BOOL = 87;
  /** RegularExpression Id. */
  int NUM = 88;
  /** RegularExpression Id. */
  int STRING = 89;
  /** RegularExpression Id. */
  int OBJECT = 90;
  /** RegularExpression Id. */
  int IDENTIFIER = 91;
  /** RegularExpression Id. */
  int ESCAPED_DQUO = 92;
  /** RegularExpression Id. */
  int DQUOBIS = 93;
  /** RegularExpression Id. */
  int LITERAL_VALUE = 94;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int LITERAL = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\",\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"return\"",
    "\"true\"",
    "\"false\"",
    "\"!\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"&&\"",
    "\"||\"",
    "\"=\"",
    "\"\\\"\"",
    "<NUMBER>",
    "\"map\"",
    "\"world\"",
    "\"attack\"",
    "\"player\"",
    "\"actor\"",
    "\"item\"",
    "\"outdoor\"",
    "\"activateGroup\"",
    "\"deactivateGroup\"",
    "\"getMap\"",
    "\"current\"",
    "\"source\"",
    "\"target\"",
    "\"damage\"",
    "\"category\"",
    "\"reward\"",
    "\"addActorCondition\"",
    "\"clearActorCondition\"",
    "\"getItemCount\"",
    "\"giveItem\"",
    "\"removeItem\"",
    "\"getItemInSlot\"",
    "\"equipItemInSlot\"",
    "\"unequipSlot\"",
    "\"hasQuestProgress\"",
    "\"addQuestProgress\"",
    "\"actorConditions\"",
    "\"toSource\"",
    "\"toTarget\"",
    "\"base\"",
    "\"maxHP\"",
    "\"maxAP\"",
    "\"moveCost\"",
    "\"equipCost\"",
    "\"useCost\"",
    "\"addExperience\"",
    "\"level\"",
    "\"totalExp\"",
    "\"currentExp\"",
    "\"addAlignment\"",
    "\"getAlignment\"",
    "\"id\"",
    "\"hp\"",
    "\"ap\"",
    "\"ac\"",
    "\"ad\"",
    "\"bc\"",
    "\"dr\"",
    "\"cc\"",
    "\"cm\"",
    "\"min\"",
    "\"max\"",
    "\"cur\"",
    "\"bool\"",
    "\"num\"",
    "\"string\"",
    "\"object\"",
    "<IDENTIFIER>",
    "\"\\\\\\\"\"",
    "\"\\\"\"",
    "<LITERAL_VALUE>",
  };

}
